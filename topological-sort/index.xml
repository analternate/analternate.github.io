<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Topological Sort on My New Hugo Site</title>
    <link>http://example.org/topological-sort/</link>
    <description>Recent content in Topological Sort on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://example.org/topological-sort/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction</title>
      <link>http://example.org/topological-sort/intro/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/topological-sort/intro/</guid>
      <description># Given a adj graph graph = {1: [2,3], 2:[3]} def topsort(graph): stack, seen = [], set() for g in graph: dfs(g, seen, graph, stack) return stack[::-1] def dfs(g, seen, graph, stack): if g in seen: return seen.add(g) for c in graph[g]: dfs(c, seen, graph, stack) stack.append(g)  </description>
    </item>
    
    <item>
      <title>Cycle Detection</title>
      <link>http://example.org/topological-sort/cycledetection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/topological-sort/cycledetection/</guid>
      <description>Given a topological sort is operated on a directed acyclic graph, it is sometimes important to check if the graph does not contain a cycle before proceeding to topological sort
Nice graph problems: https://algs4.cs.princeton.edu/42digraph/</description>
    </item>
    
  </channel>
</rss>